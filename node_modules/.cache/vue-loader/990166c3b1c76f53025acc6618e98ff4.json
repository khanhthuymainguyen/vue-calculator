{"remainingRequest":"/home/khanhh/Desktop/vue-tutorial/vue-calculator/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/khanhh/Desktop/vue-tutorial/vue-calculator/src/components/Calculator.vue?vue&type=style&index=0&id=e835979c&scoped=true&lang=css&","dependencies":[{"path":"/home/khanhh/Desktop/vue-tutorial/vue-calculator/src/components/Calculator.vue","mtime":1591610738693},{"path":"/home/khanhh/Desktop/vue-tutorial/vue-calculator/node_modules/css-loader/dist/cjs.js","mtime":1589316121639},{"path":"/home/khanhh/Desktop/vue-tutorial/vue-calculator/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1589316121986},{"path":"/home/khanhh/Desktop/vue-tutorial/vue-calculator/node_modules/postcss-loader/src/index.js","mtime":1589316121859},{"path":"/home/khanhh/Desktop/vue-tutorial/vue-calculator/node_modules/cache-loader/dist/cjs.js","mtime":1589316115430},{"path":"/home/khanhh/Desktop/vue-tutorial/vue-calculator/node_modules/vue-loader/lib/index.js","mtime":1589316121986}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jYWxjdWxhdG9yIHsKICBtYXJnaW46IGF1dG87CiAgd2lkdGg6IDQwMHB4OwogIGZvbnQtc2l6ZTogNDBweDsKICBkaXNwbGF5OiBncmlkOwogIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7IC8qIDQgYnkgaW5maW5pdHkgKi8KICBncmlkLWF1dG8tcm93czogbWlubWF4KDUwcHgsIGF1dG8pOwp9CgouZGlzcGxheSB7CiAgLyogU3RhcnQgYXQgY29sdW1uIDEsIGVuZCBhdCBjb2x1bW4gNCAqLwogIGdyaWQtY29sdW1uOiAxIC8gNTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzOwogIGNvbG9yOiB3aGl0ZTsKfQoKLnplcm8gewogIGdyaWQtY29sdW1uOiAxIC8gMzsKfQoKLmJ0biB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjsKICBib3JkZXI6IDFweCBzb2xpZCAjOTk5Owp9Cgoub3BlcmF0b3IgewogIGJhY2tncm91bmQtY29sb3I6IG9yYW5nZTsKICBjb2xvcjogd2hpdGU7Cn0K"},{"version":3,"sources":["Calculator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Calculator.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"calculator\">\n    <div class=\"display\">{{ current || '0' }}</div>\n    <div @click=\"clear\" class=\"btn\">C</div>\n    <div @click=\"sign\" class=\"btn\">+/-</div>\n    <div @click=\"percent\" class=\"btn\">%</div>\n    <div @click=\"divide\" class=\"btn operator\">รท</div>\n    <div @click=\"append('7')\" class=\"btn\">7</div>\n    <div @click=\"append('8')\" class=\"btn\">8</div>\n    <div @click=\"append('9')\" class=\"btn\">9</div>\n    <div @click=\"times\" class=\"btn operator\">x</div>\n    <div @click=\"append('4')\" class=\"btn\">4</div>\n    <div @click=\"append('5')\" class=\"btn\">5</div>\n    <div @click=\"append('6')\" class=\"btn\">6</div>\n    <div @click=\"minus\" class=\"btn operator\">-</div>\n    <div @click=\"append('1')\" class=\"btn\">1</div>\n    <div @click=\"append('2')\" class=\"btn\">2</div>\n    <div @click=\"append('3')\" class=\"btn\">3</div>\n    <div @click=\"add\" class=\"btn operator\">+</div>\n    <div @click=\"append('0')\" class=\"btn zero\">0</div>\n    <div @click=\"dot\" class=\"btn\">.</div>\n    <div @click=\"equal\" class=\"btn operator\">=</div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      previous: null,\n      current: '',\n      operator: null,\n      operatorClicked: false,\n    }\n  },\n  methods: {\n    clear () {\n      this.current = '';\n    },\n    sign () {\n      this.current = this.current.charAt(0) === '-' ? \n        this.current.slice(1) : `-${this.current}`;\n    },\n    percent () {\n      this.current = `${parseFloat(this.current) / 100}`;\n    },\n    append (number) {\n      if (this.operatorClicked) {\n        this.current = '';\n        this.operatorClicked = false;\n      }\n      this.current = `${this.current}${number}`; \n    },\n    dot () {\n      if (this.current.indexOf('.') === -1) {\n        this.append('.')\n      }\n    },\n    setPrevious () {\n      this.previous = this.current;\n      this.operatorClicked = true;\n    },\n    divide () {\n      this.operator = (a, b) => a / b;\n      this.setPrevious();\n    },\n    times () {\n      this.operator = (a, b) => a * b;\n      this.setPrevious();\n    },\n    minus () {\n      this.operator = (a, b) => a - b;\n      this.setPrevious();\n    },\n    add () {\n      this.operator = (a, b) => a + b;\n      this.setPrevious();\n    },\n    equal () {\n      this.current = `${this.operator(\n        parseFloat(this.previous), \n        parseFloat(this.current)\n      )}`;\n      this.previous = null;\n    },\n  } \n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.calculator {\n  margin: auto;\n  width: 400px;\n  font-size: 40px;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr); /* 4 by infinity */\n  grid-auto-rows: minmax(50px, auto);\n}\n\n.display {\n  /* Start at column 1, end at column 4 */\n  grid-column: 1 / 5;\n  background-color: #333;\n  color: white;\n}\n\n.zero {\n  grid-column: 1 / 3;\n}\n\n.btn {\n  background-color: #f2f2f2;\n  border: 1px solid #999;\n}\n\n.operator {\n  background-color: orange;\n  color: white;\n}\n</style>\n"]}]}